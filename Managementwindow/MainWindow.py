# Form implementation generated from reading ui file 'C:\Users\Admin\PycharmProjects\PythonProject1\Managementcinema\file ui\MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from Managementwindow import app_handler

import os

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        # Lấy thư mục gốc "Quản lý vé xem phim"
        project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
        images_folder = os.path.join(project_root, "images")
        image_path = os.path.join(images_folder, "nen.png")
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1114, 600)
        font = QtGui.QFont()
        font.setPointSize(1)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("   background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"    }")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 10, 421, 31))
        font = QtGui.QFont()
        font.setFamily("Calisto MT")
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.label.setObjectName("label")
        self.tableWidget = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(80, 40, 421, 191))
        font = QtGui.QFont()
        font.setFamily("Time New Roman,sans-serif")
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(8)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.pushButton_XoaDS = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_XoaDS.setGeometry(QtCore.QRect(220, 240, 81, 31))
        self.pushButton_XoaDS.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_XoaDS.setObjectName("pushButton_XoaDS")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(70, 280, 431, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.label_2.setObjectName("label_2")
        self.tableWidget_2 = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget_2.setGeometry(QtCore.QRect(70, 310, 431, 171))
        font = QtGui.QFont()
        font.setFamily("Time New Roman,sans-serif")
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget_2.setFont(font)
        self.tableWidget_2.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(3)
        self.tableWidget_2.setRowCount(7)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(2, item)
        self.pushButton_Chinhsua_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Chinhsua_2.setGeometry(QtCore.QRect(90, 490, 101, 31))
        self.pushButton_Chinhsua_2.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_Chinhsua_2.setObjectName("pushButton_Chinhsua_2")
        self.pushButton_Lammoi = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Lammoi.setGeometry(QtCore.QRect(210, 490, 91, 31))
        self.pushButton_Lammoi.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_Lammoi.setObjectName("pushButton_Lammoi")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(670, 70, 311, 31))
        font = QtGui.QFont()
        font.setFamily("Calisto MT")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.label_3.setObjectName("label_3")
        self.tableWidget_3 = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tableWidget_3.setGeometry(QtCore.QRect(670, 100, 311, 381))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget_3.setFont(font)
        self.tableWidget_3.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(3)
        self.tableWidget_3.setRowCount(16)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 2, item)
        self.pushButton_Chinhsua_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Chinhsua_3.setGeometry(QtCore.QRect(670, 490, 101, 31))
        self.pushButton_Chinhsua_3.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_Chinhsua_3.setObjectName("pushButton_Chinhsua_3")
        self.pushButton_Xoauser = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Xoauser.setGeometry(QtCore.QRect(800, 490, 51, 31))
        self.pushButton_Xoauser.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_Xoauser.setObjectName("pushButton_Xoauser")
        self.pushButton_Chinhsua = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Chinhsua.setGeometry(QtCore.QRect(100, 240, 91, 31))
        self.pushButton_Chinhsua.setStyleSheet("background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, \n"
"                    stop:0 #FFF7AD, \n"
"                    stop:0.5 #FFA9F9, \n"
"                    stop:1 #D98BBF);\n"
"font-weight: bold;\n"
"color: #000000; /* Đảm bảo chữ rõ ràng, có thể chỉnh thành màu khác nếu cần */")
        self.pushButton_Chinhsua.setObjectName("pushButton_Chinhsua")
        self.ButtonQuaylaiDT = QtWidgets.QPushButton(parent=self.centralwidget)
        self.ButtonQuaylaiDT.setGeometry(QtCore.QRect(990, 490, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        font.setWeight(75)
        self.ButtonQuaylaiDT.setFont(font)
        self.ButtonQuaylaiDT.setStyleSheet(" QPushButton {\n"
"        background-color: rgb(181, 62, 138);\n"
"        color: white;\n"
"        font-size: 16px;\n"
"        font-weight: bold;\n"
"        border-radius: 10px;\n"
"        padding: 5px 10px;\n"
"        border: 2px solid #4682B4;\n"
"    }")
        self.ButtonQuaylaiDT.setObjectName("ButtonQuaylaiDT")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(-6, -5, 1121, 551))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap(os.path.join(images_folder,"nen.png")))
        self.label_4.setScaledContents(True)
        self.label_4.setObjectName("label_4")
        self.label_4.raise_()
        self.label.raise_()
        self.tableWidget.raise_()
        self.pushButton_XoaDS.raise_()
        self.label_2.raise_()
        self.tableWidget_2.raise_()
        self.pushButton_Chinhsua_2.raise_()
        self.pushButton_Lammoi.raise_()
        self.label_3.raise_()
        self.tableWidget_3.raise_()
        self.pushButton_Chinhsua_3.raise_()
        self.pushButton_Xoauser.raise_()
        self.pushButton_Chinhsua.raise_()
        self.ButtonQuaylaiDT.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1114, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.load_ticket_prices()
        self.pushButton_Chinhsua_3.clicked.connect(lambda: app_handler.edit_user(self))
        self.pushButton_Xoauser.clicked.connect(lambda: app_handler.delete_user_event(self))
        app_handler.load_users(self)
        self.load_ticket_data()
        self.pushButton_Lammoi.clicked.connect(self.refresh_ticket_data)
        self.tableWidget_2.cellChanged.connect(self.save_ticket_price)
        self.pushButton_Chinhsua_2.clicked.connect(self.update_ticket_prices)
        app_handler.load_users(self)  # Gọi hàm tải danh sách người dùng
        # Gọi hàm để hiển thị danh sách người dùng khi mở giao diện
        self.load_movie_data()
        self.load_movie_status()
        self.pushButton_Chinhsua.clicked.connect(self.save_movie_status)

    def save_ticket_price(self, row, col):
        """Lưu giá vé vào file 'giave.txt' khi chỉnh sửa ô trong bảng."""
        if col != 0:  # Chỉ lưu khi chỉnh sửa cột "Giá vé"
            return

        item = self.tableWidget_2.item(row, col)
        if item is None:
            return

        new_price = item.text().strip()  # Lấy giá trị mới nhập vào
        movie_name_item = self.tableWidget_2.verticalHeaderItem(row)

        if movie_name_item:
            movie_name = movie_name_item.text().strip()
        else:
            return

        # Cập nhật giá vé trong file giave.txt
        try:
            with open("giave.txt", "r", encoding="utf-8") as file:
                lines = file.readlines()

            with open("giave.txt", "w", encoding="utf-8") as file:
                updated = False
                for line in lines:
                    columns = line.strip().split("|")

                    # Nếu phim trùng, cập nhật giá vé
                    if columns[0].strip() == movie_name:
                        columns[1] = new_price  # Cập nhật cột giá vé
                        file.write(" | ".join(columns) + "\n")
                        updated = True
                    else:
                        file.write(line)

                # Nếu phim chưa có trong file, thêm mới
                if not updated:
                    file.write(f"{movie_name} | {new_price}\n")

            print(f"✅ Đã lưu giá vé mới {new_price} cho phim {movie_name}")

        except Exception as e:
            print(f"🚨 Lỗi khi lưu giá vé: {e}")

    def load_ticket_prices(self):
        """Tải dữ liệu giá vé từ 'giave.txt' vào bảng khi mở giao diện."""
        ticket_prices = {}

        try:
            with open("giave.txt", "r", encoding="utf-8") as file:
                for line in file:
                    columns = line.strip().split("|")

                    # Kiểm tra xem dòng có đúng định dạng không
                    if len(columns) < 2:
                        continue

                    movie_name = columns[0].strip().lower()  # Chuyển về chữ thường để so khớp
                    price = columns[1].strip()
                    ticket_prices[movie_name] = price  # Lưu giá vé vào dictionary

        except FileNotFoundError:
            print("⚠ File 'giave.txt' không tồn tại. Sẽ tạo file mới khi lưu dữ liệu.")
        except Exception as e:
            print(f"🚨 Lỗi khi đọc file 'giave.txt': {e}")
            return

        # Cập nhật bảng với dữ liệu giá vé
        for row in range(self.tableWidget_2.rowCount()):
            item = self.tableWidget_2.verticalHeaderItem(row)  # Lấy tên phim từ tiêu đề hàng
            if item:
                movie_name = item.text().strip().lower()
                price = ticket_prices.get(movie_name, "Chưa có giá")  # Nếu không có giá, đặt mặc định

                # Cập nhật cột "Giá vé"
                self.tableWidget_2.setItem(row, 0, QtWidgets.QTableWidgetItem(price))

        print("✅ Đã tải giá vé từ 'giave.txt' vào bảng.")

    def update_ticket_prices(self):
        """Cập nhật toàn bộ giá vé vào file 'giave.txt' khi ấn nút 'Chỉnh sửa'."""
        try:
            with open("giave.txt", "w", encoding="utf-8") as file:
                for row in range(self.tableWidget_2.rowCount()):
                    movie_name_item = self.tableWidget_2.verticalHeaderItem(row)
                    price_item = self.tableWidget_2.item(row, 0)  # Cột giá vé

                    if movie_name_item and price_item:
                        movie_name = movie_name_item.text().strip()
                        price = price_item.text().strip()
                        file.write(f"{movie_name} | {price}\n")

            print("✅ Đã lưu toàn bộ giá vé vào 'giave.txt'.")

        except Exception as e:
            print(f"🚨 Lỗi khi lưu toàn bộ giá vé: {e}")

    def save_ticket_price(self, row, col):
        """Lưu giá vé vào file 'giave.txt' khi chỉnh sửa ô trong bảng."""
        if col != 0:  # Chỉ lưu khi chỉnh sửa cột "Giá vé"
            return

        item = self.tableWidget_2.item(row, col)
        if item is None:
            return

        new_price = item.text().strip()  # Lấy giá trị mới nhập vào
        movie_name_item = self.tableWidget_2.verticalHeaderItem(row)

        if movie_name_item:
            movie_name = movie_name_item.text().strip()
        else:
            return

        # Cập nhật giá vé trong file giave.txt
        try:
            with open("giave.txt", "r", encoding="utf-8") as file:
                lines = file.readlines()

            with open("giave.txt", "w", encoding="utf-8") as file:
                updated = False
                for line in lines:
                    columns = line.strip().split("|")

                    # Nếu phim trùng, cập nhật giá vé
                    if columns[0].strip() == movie_name:
                        columns[1] = new_price  # Cập nhật cột giá vé
                        file.write(" | ".join(columns) + "\n")
                        updated = True
                    else:
                        file.write(line)

                # Nếu phim chưa có trong file, thêm mới
                if not updated:
                    file.write(f"{movie_name} | {new_price}\n")

            print(f"✅ Đã lưu giá vé mới {new_price} cho phim {movie_name}")

        except Exception as e:
            print(f"🚨 Lỗi khi lưu giá vé: {e}")

    def load_ticket_data(self):
        """Đọc dữ liệu từ file datadoanhthu.txt và cập nhật bảng Quản lý vé."""
        ticket_data = {}

        try:
            with open("datadoanhthu.txt", "r", encoding="utf-8") as file:
                for line in file:
                    columns = line.strip().split("|")

                    # Kiểm tra xem dòng có ít nhất 2 cột không (Tên phim | Số vé đã bán)
                    if len(columns) < 2:
                        continue

                    # Chuẩn hóa tên phim (xóa khoảng trắng thừa và chuyển về chữ thường)
                    movie_name = columns[0].strip().lower()

                    try:
                        tickets_sold = int(columns[1].strip())  # Chuyển số vé đã bán thành số nguyên
                    except ValueError:
                        print(f"Lỗi chuyển đổi số vé cho phim '{movie_name}', bỏ qua dòng này!")
                        continue

                    # Cộng dồn số vé đã bán nếu phim đã có trong dict
                    if movie_name in ticket_data:
                        ticket_data[movie_name] += tickets_sold
                    else:
                        ticket_data[movie_name] = tickets_sold

        except FileNotFoundError:
            print("🚨 Lỗi: File 'datadoanhthu.txt' không tồn tại!")
            return
        except Exception as e:
            print(f"🚨 Lỗi khi đọc dữ liệu: {e}")
            return

        # Cập nhật dữ liệu lên bảng
        total_tickets = 216  # Giả sử tổng số vé là 216
        row_count = self.tableWidget_2.rowCount()

        for row in range(row_count):
            item = self.tableWidget_2.verticalHeaderItem(row)  # Lấy tên phim từ tiêu đề hàng
            if item:
                movie_name_in_table = item.text().strip().lower()  # Chuyển về chữ thường để so khớp
                tickets_sold = ticket_data.get(movie_name_in_table, 0)  # Lấy số vé đã bán
                tickets_remaining = total_tickets - tickets_sold  # Tính số vé còn lại

                # Cập nhật bảng
                self.tableWidget_2.setItem(row, 1, QtWidgets.QTableWidgetItem(str(tickets_sold)))
                self.tableWidget_2.setItem(row, 2, QtWidgets.QTableWidgetItem(str(tickets_remaining)))

    def refresh_ticket_data(self):
        """Làm mới dữ liệu khi nhấn nút 'Làm mới'."""
        self.tableWidget_2.clearContents()  # Xóa dữ liệu cũ
        self.load_ticket_data()  # Tải lại từ file

    def load_movie_data(self):
        """ Đọc dữ liệu từ datatime.txt và cập nhật vào tableWidget, khóa cột 1 và 2 """
        movie_data = {}

        try:
            with open("datatime.txt", "r", encoding="utf-8") as file:
                lines = file.readlines()

            # Bỏ dòng tiêu đề (dòng đầu tiên)
            for line in lines[1:]:
                columns = line.strip().split("|")
                if len(columns) < 3:
                    continue  # Bỏ qua nếu dòng không đủ dữ liệu

                movie_name = columns[0].strip().lower()  # Chuẩn hóa tên phim
                genre = columns[1].strip()  # Thể loại
                duration = columns[2].strip()  # Thời lượng

                movie_data[movie_name] = (genre, duration)  # Lưu vào dictionary

        except FileNotFoundError:
            print("⚠ File 'datatime.txt' không tồn tại!")
            return
        except Exception as e:
            print(f"🚨 Lỗi khi đọc file 'datatime.txt': {e}")
            return

        # Cập nhật dữ liệu vào tableWidget
        for row in range(self.tableWidget.rowCount()):
            item = self.tableWidget.verticalHeaderItem(row)
            if item:
                movie_name_in_table = item.text().strip().lower()
                if movie_name_in_table in movie_data:
                    genre, duration = movie_data[movie_name_in_table]

                    # Cập nhật cột "Thể loại" (cột 1)
                    self.tableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(genre))
                    self.tableWidget.item(row, 0).setFlags(QtCore.Qt.ItemFlag.ItemIsEnabled)  # Khóa cột 1

                    # Cập nhật cột "Thời lượng" (cột 2)
                    self.tableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(duration))
                    self.tableWidget.item(row, 1).setFlags(QtCore.Qt.ItemFlag.ItemIsEnabled)  # Khóa cột 2

        print("✅ Dữ liệu phim đã được cập nhật từ datatime.txt.")

    def save_movie_status(self):
        """ Lưu ngày khởi chiếu và trạng thái phim vào movie_status.txt khi nhấn 'Chỉnh sửa' """
        try:
            with open("movie_status.txt", "w", encoding="utf-8") as file:
                for row in range(self.tableWidget.rowCount()):
                    movie_name_item = self.tableWidget.verticalHeaderItem(row)
                    release_date_item = self.tableWidget.item(row, 2)  # Cột 3 (Ngày khởi chiếu)
                    status_item = self.tableWidget.item(row, 3)  # Cột 4 (Trạng thái)

                    if movie_name_item and release_date_item and status_item:
                        movie_name = movie_name_item.text().strip()
                        release_date = release_date_item.text().strip()
                        status = status_item.text().strip()

                        file.write(f"{movie_name} | {release_date} | {status}\n")

            print("✅ Đã lưu ngày khởi chiếu và trạng thái phim vào movie_status.txt.")

        except Exception as e:
            print(f"🚨 Lỗi khi lưu dữ liệu: {e}")

    def load_movie_status(self):
        """ Đọc dữ liệu từ movie_status.txt và cập nhật vào tableWidget """
        movie_status = {}

        try:
            with open("movie_status.txt", "r", encoding="utf-8") as file:
                for line in file:
                    columns = line.strip().split("|")
                    if len(columns) < 3:
                        continue  # Bỏ qua dòng lỗi

                    movie_name = columns[0].strip().lower()
                    release_date = columns[1].strip()
                    status = columns[2].strip()

                    movie_status[movie_name] = (release_date, status)  # Lưu vào dictionary

        except FileNotFoundError:
            print("⚠ File 'movie_status.txt' không tồn tại! Sẽ tạo mới khi lưu.")
            return
        except Exception as e:
            print(f"🚨 Lỗi khi đọc file 'movie_status.txt': {e}")
            return

        # Cập nhật bảng với ngày khởi chiếu và trạng thái
        for row in range(self.tableWidget.rowCount()):
            item = self.tableWidget.verticalHeaderItem(row)
            if item:
                movie_name_in_table = item.text().strip().lower()
                release_date, status = movie_status.get(movie_name_in_table, ("", ""))

                self.tableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(release_date))  # Cột 3
                self.tableWidget.setItem(row, 3, QtWidgets.QTableWidgetItem(status))  # Cột 4

        print("✅ Đã tải ngày khởi chiếu và trạng thái phim từ movie_status.txt.")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt;\">DANH SÁCH PHIM </span></p></body></html>"))
        item = self.tableWidget.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Avatar: The Way Of Water"))
        item = self.tableWidget.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Barbie"))
        item = self.tableWidget.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "A Man Called Otto"))
        item = self.tableWidget.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Past Lives"))
        item = self.tableWidget.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "The Creator"))
        item = self.tableWidget.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "Guardians of the Galaxy"))
        item = self.tableWidget.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ant-Man and The Wasp"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Thể loại"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Thời lượng"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Ngày khởi chiếu"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Trạng thái"))
        self.pushButton_XoaDS.setText(_translate("MainWindow", "Xoá"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600;\">QUẢN LÝ VÉ</span></p></body></html>"))
        item = self.tableWidget_2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Avatar: The Way Of The Water"))
        item = self.tableWidget_2.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "Barbie"))
        item = self.tableWidget_2.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "A Man Called Otto"))
        item = self.tableWidget_2.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Past Lives"))
        item = self.tableWidget_2.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "The Creator"))
        item = self.tableWidget_2.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "Gurdians of the Galaxy"))
        item = self.tableWidget_2.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "Ant-Man and The Wasp"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Giá vé"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Số vé đã bán"))
        item = self.tableWidget_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Số vé còn lại"))
        self.pushButton_Chinhsua_2.setText(_translate("MainWindow", "Chỉnh sửa"))
        self.pushButton_Lammoi.setText(_translate("MainWindow", "Làm mới"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt;\">DANH SÁCH NGƯỜI DÙNG</span></p></body></html>"))
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "username"))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Email"))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Số điện thoại"))
        __sortingEnabled = self.tableWidget_3.isSortingEnabled()
        self.tableWidget_3.setSortingEnabled(False)
        self.tableWidget_3.setSortingEnabled(__sortingEnabled)
        self.pushButton_Chinhsua_3.setText(_translate("MainWindow", "Chỉnh sửa"))
        self.pushButton_Xoauser.setText(_translate("MainWindow", "Xoá"))
        self.pushButton_Chinhsua.setText(_translate("MainWindow", "Chỉnh sửa"))
        self.ButtonQuaylaiDT.setText(_translate("MainWindow", "Quay lại"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())